digraph "std::optional<struct CameraInstruction::FadeInstruction>" {
rankdir = LR
96
96 -> 97
97 -> 98
96 -> 99
99 -> 129

96 [label="std::optional<struct CameraInstruction::FadeInstruction>",comment="name: \"std::optional<struct CameraInstruction::FadeInstruction>\", typeName: \"\", id: 96, branchId: 0, recurseId: -1, attributes: 0, notes: \"\""];
97 [label="Has Value",comment="name: \"Has Value\", typeName: \"\", id: 97, branchId: 0, recurseId: -1, attributes: 0, notes: \"If true, follow with appropriate data type, otherwise nothing\""];
98 [label="bool",comment="name: \"bool\", typeName: \"\", id: 98, branchId: 0, recurseId: -1, attributes: 512, notes: \"\""];
99 [label="Value",comment="name: \"Value\", typeName: \"CameraInstruction::FadeInstruction\", id: 99, branchId: 0, recurseId: -1, attributes: 256, notes: \"\""];
129 [label="CameraInstruction::FadeInstruction",comment="name: \"CameraInstruction::FadeInstruction\", typeName: \"\", id: 129, branchId: 0, recurseId: -1, attributes: 512, notes: \"\""];
{ rank = max;98;129}

}
